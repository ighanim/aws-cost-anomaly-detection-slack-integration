---
AWSTemplateFormatVersion: '2010-09-09'
Resources:

#| Resource                     | Type                    | Description                                      |
#|------------------------------|-------------------------|--------------------------------------------------|
#| GetSecretValueLambdaPolicy   | AWS::IAM::ManagedPolicy | IAM policy with GetSecretValue value permissions |
#| CostAnomalyToSlackLambdaRole | AWS::IAM::Role          | IAM Role associated with the Lambda Functions    |

 
  GetSecretValueLambdaPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - secretsmanager:GetSecretValue
          Resource: "*"
          Condition:
            StringEquals:
             'secretsmanager:SecretId': !Ref SlackWebhookURLSecret
      Roles:
      - Ref: CostAnomalyToSlackLambdaRole

  CostAnomalyToSlackLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Path: "/"
      Tags:
      - Key: Project
        Value: CostAnomalyToSlack


#| Resource            | Type            | Description                                                                     |
#|---------------------|-----------------|---------------------------------------------------------------------------------|
#| SnsTopicCostAnomaly | AWS::SNS::Topic | SNS Topic that shall receive notifications from Cost Explorer Anomaly Detection |

  SnsTopicCostAnomaly:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Endpoint:
          Fn::GetAtt:
          - CostAnomalyToSlackLambda
          - Arn
        Protocol: lambda
      Tags:
      - Key: Project
        Value: CostAnomalyToSlack
    DependsOn:
    - CostAnomalyToSlackLambda

  SnsTopicPolicyCostAnomaly:
    Type: AWS::SNS::TopicPolicy
    Properties: 
      PolicyDocument: 
        {
          "Statement": [
            {
            "Sid": "costalerts to publish",
            "Effect": "Allow",
            "Principal": { 
              "Service": "costalerts.amazonaws.com" 
              },
              "Action": "sns:Publish",
              "Resource": !Ref SnsTopicCostAnomaly ,
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": !Ref sourceAccount
                  }
                  }
            },
            {
              "Sid": "Lambda to subscribe",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"

              },
              "Action": "sns:Subscribe",
              "Resource": !Ref SnsTopicCostAnomaly,
              "Condition": {
                "StringEquals": {
                  "lambda:FunctionArn":
                    Fn::GetAtt:
                      - CostAnomalyToSlackLambda
                      - Arn
                }

              }
            }
            ]
        }
                  
      Topics: 
      - !Ref SnsTopicCostAnomaly


#| Resource                              | Type                    | Description                                            |
#|---------------------------------------|-------------------------|--------------------------------------------------------|
#| CostAnomalyToSlackLambda              | AWS::Lambda::Function   | Main Lambda Function that will call Slack Webhooks API |
#| CostAnomalyToSlackLambdaSnsPermission | AWS::Lambda::Permission | Permission for SNS to invoke CostAnomalyToSlackLambda  |

  CostAnomalyToSlackLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: s3Bucket
        S3Key: !Ref codePackage
      Description: Lambda Function to Send Cost Anomaly Events to Slack Webhook
      Handler: lambda_function.lambda_handler
      Role:
        Fn::GetAtt:
        - CostAnomalyToSlackLambdaRole
        - Arn
      Runtime: python3.7
      Tags:
      - Key: Project
        Value: CostAnomalyToSlack
  CostAnomalyToSlackLambdaSnsPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: SnsTopicCostAnomaly
      FunctionName:
        Fn::GetAtt:
        - CostAnomalyToSlackLambda
        - Arn

#| Resource              | Type                        | Description                            |
#|-----------------------|-----------------------------|----------------------------------------|
#| SlackWebhookURLSecret | AWS::SecretsManager::Secret | Secret storing the Slack webhook URL.  |
  
  SlackWebhookURLSecret:        
    Type: AWS::SecretsManager::Secret
    Properties: 
      Name: anomaly-detection-slack-webhook-url
      SecretString: !Sub
      - '{"anomaly-detection-slack-webhook-url": "${secret}"}'
      - { secret: !Ref slackWebhookURL }  
      Tags: 
      - Key: Project
        Value: CostAnomalyToSlack

#| Parameter       | Type   | Description                                                                                               |
#|-----------------|--------|-----------------------------------------------------------------------------------------------------------|
#| s3Bucket        | String | S3 bucket where the Lambda code package is stored                                                         |
#| codePackage     | String | The code package S3 object key name. Typically, filename.zip                                              |
#| slackWebhookURL | String | Slack channel webhook URL. If you don't have one already, check https://api.slack.com/messaging/webhooks. |

Parameters:
  sourceAccount:
    Type: String
    Description: Enter the 11-digit AWS Account Number of the cost anomaly notification subscription. If you would like to aggregate data across all of your accounts, enter the Payer/Management account number. Else, if you would like to receive notifications of a specific member account (be it this account), enter the account number. 
  s3Bucket:
    Type: String
    Description: S3 Bucket where your Lambda functions and StepFunctions state machines    are stored.
  codePackage:
    Type: String
    Description: S3 key for the Lambda Code. 
  slackWebhookURL:
    Type: String
    Description: Slack Webhook URL.
  
